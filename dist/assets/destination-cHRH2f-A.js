import"./main-BY_aWrLz.js";console.log("Destination page script loaded.");console.log("Destination page script loaded.");const g=document.getElementById("destination-name"),l=document.getElementById("favorite-button"),y=document.getElementById("weather-info"),f=document.getElementById("attractions-list"),i=document.getElementById("map-container"),u=document.getElementById("currency-info"),E="fsq3c9N6+/alfBbVPHOdUq+MNZGnJO0Lqf1cD8skPQH2CH4=",x="6c6888642f1baa0b3811d6b3",m="travelExplorerFavorites";function v(t){return new URLSearchParams(window.location.search).get(t)}async function $(){const t=v("query");if(!t){g.textContent="No destination specified.",y.textContent="",f.innerHTML="",u.textContent="",i.textContent="Please search for a destination first.";return}g.textContent=`Details for ${decodeURIComponent(t)}`,await A(t),await b(),y.textContent=`Weather data for ${decodeURIComponent(t)} will be shown here.`,w(t)}let d=null;async function A(t){f.innerHTML="<li>Loading attractions...</li>";const o={method:"GET",headers:{accept:"application/json",Authorization:E}},r=`https://api.foursquare.com/v3/places/search?near=${encodeURIComponent(t)}&limit=10&fields=name,location,categories,fsq_id,geocodes`;try{const e=await fetch(r,o);if(!e.ok)throw new Error(`Foursquare API error: ${e.status} ${e.statusText}`);const n=await e.json();console.log("Foursquare Data:",n);const a=n.results||[],s=await Promise.all(a.map(async c=>{const h=await P(c.fsq_id);return{...c,photoUrl:h}}));I(s),U(s)}catch(e){console.error("Error fetching attractions:",e),f.innerHTML="<li>Could not load attractions. Please try again later.</li>",i.textContent="Could not load map data."}}function I(t){if(f.innerHTML="",!t||t.length===0){f.innerHTML="<li>No attractions found for this location.</li>";return}t.forEach(o=>{var c;const r=document.createElement("li");r.className="card";const e=o.name||"Unnamed Attraction",n=((c=o.location)==null?void 0:c.formatted_address)||"Address not available",a=o.photoUrl,s=a?`<img src="${a}" alt="${e}" loading="lazy">`:'<div class="no-image-placeholder" style="height: 150px; background: #ddd; text-align: center; line-height: 150px; color: #888; border-radius: 4px; margin-bottom: 0.5rem;">No Image</div>';r.innerHTML=`
            ${s}
            <h4>${e}</h4>
            <p>${n}</p>
            `,f.appendChild(r)})}async function P(t){if(!t)return null;const o={method:"GET",headers:{accept:"application/json",Authorization:E}},r=`https://api.foursquare.com/v3/places/${t}/photos?limit=1`;try{const e=await fetch(r,o);if(!e.ok)return console.warn(`Could not fetch photo for ${t}: ${e.status}`),null;const n=await e.json();if(n&&n.length>0){const a=n[0];return`${a.prefix}300x300${a.suffix}`}return null}catch(e){return console.error(`Error fetching photo for ${t}:`,e),null}}function U(t){if(i.innerHTML="",i.style.backgroundColor="transparent",d&&(d.remove(),d=null),typeof L>"u"){i.textContent="Map library (Leaflet) not loaded.",console.error("Leaflet library (L) is not defined.");return}let o=[51.505,-.09],r=13;const e=t.find(n=>{var a;return(a=n.geocodes)==null?void 0:a.main});if(e)o=[e.geocodes.main.latitude,e.geocodes.main.longitude];else if(t.length>0)console.warn("No main geocodes found for centering map. Using default.");else{i.textContent="No location data available to display map.";return}try{d=L.map(i).setView(o,r),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}).addTo(d),t.forEach(n=>{var a,s;if((a=n.geocodes)!=null&&a.main){const c=[n.geocodes.main.latitude,n.geocodes.main.longitude];L.marker(c).addTo(d).bindPopup(`<b>${n.name||"Attraction"}</b><br>${((s=n.location)==null?void 0:s.formatted_address)||""}`)}})}catch(n){console.error("Error initializing Leaflet map:",n),i.textContent="Error displaying map."}}async function b(t="USD"){u.textContent="Loading currency info...";const o=`https://v6.exchangerate-api.com/v6/${x}/latest/${t}`;try{const r=await fetch(o);if(!r.ok){const n=await r.json();throw new Error(`ExchangeRate API error: ${r.status} - ${n["error-type"]||r.statusText}`)}const e=await r.json();if(e.result==="success")R(e.conversion_rates,t);else throw new Error(`ExchangeRate API error: ${e["error-type"]}`)}catch(r){console.error("Error fetching currency data:",r),u.textContent="Could not load currency information."}}function R(t,o){const r=["EUR","GBP","JPY","CAD"];let e=`Rates based on 1 ${o}:<ul>`;r.forEach(n=>{t[n]&&(e+=`<li>1 ${o} = ${t[n].toFixed(4)} ${n}</li>`)}),e+="</ul>",u.innerHTML=e}function p(){const t=localStorage.getItem(m);return t?JSON.parse(t):[]}function C(t){return p().includes(t)}function T(t){const o=p();o.includes(t)||(o.push(t),localStorage.setItem(m,JSON.stringify(o)),console.log(`Added ${decodeURIComponent(t)} to favorites.`))}function D(t){let o=p();o=o.filter(r=>r!==t),localStorage.setItem(m,JSON.stringify(o)),console.log(`Removed ${decodeURIComponent(t)} from favorites.`)}function w(t){l&&(C(t)?(l.textContent="Remove from Favorites",l.classList.add("is-favorite")):(l.textContent="Add to Favorites",l.classList.remove("is-favorite")))}document.addEventListener("DOMContentLoaded",$);l&&l.addEventListener("click",()=>{const t=v("query");t&&(C(t)?D(t):T(t),w(t))});
