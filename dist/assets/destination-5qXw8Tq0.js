import"./main-ND0Ri-CT.js";console.log("Destination page script loaded.");console.log("Destination page script loaded.");const g=document.getElementById("destination-name"),f=document.getElementById("weather-info"),l=document.getElementById("attractions-list"),c=document.getElementById("map-container"),m=document.getElementById("currency-info"),w="fsq3N88lZrrXQCvrs0tsvUqyAuJ+7z+qHGMn2O8OFZQnCV0=",C="0d1e993aee7732ba4c7d7359",E="c8a48780a34564cf0edd91159440d04f";function $(t){return new URLSearchParams(window.location.search).get(t)}async function x(){const t=$("query");if(!t){g.textContent="No destination specified.",f.textContent="",l.innerHTML="",m.textContent="",c.textContent="Please search for a destination first.";return}g.textContent=`Details for ${decodeURIComponent(t)}`,await Promise.all([T(t),P(t),y()]),await y()}async function T(t){f.textContent="Loading weather...";const o=`https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(t)}&appid=${E}&units=metric`;try{const e=await fetch(o);if(!e.ok){const r=await e.json();throw new Error(`OpenWeatherMap API error: ${e.status} - ${r.message||e.statusText}`)}const n=await e.json();console.log("Weather Data:",n),I(n)}catch(e){console.error("Error fetching weather data:",e),f.textContent="Could not load weather information."}}function I(t){var i,s;if(!t||!t.weather||!t.main){f.textContent="Weather data unavailable.";return}const o=((i=t.weather[0])==null?void 0:i.description)||"No description",e=t.main.temp,n=t.main.feels_like,r=(s=t.weather[0])==null?void 0:s.icon,a=r?`https://openweathermap.org/img/wn/${r}@2x.png`:"";f.innerHTML=`
        <img src="${a}" alt="${o}" style="vertical-align: middle; width: 50px; height: 50px;">
        <span>${o.charAt(0).toUpperCase()+o.slice(1)}</span><br>
        <span>Temperature: ${e.toFixed(1)}°C</span><br>
        <span>Feels like: ${n.toFixed(1)}°C</span>
    `}let d=null;async function P(t){l.innerHTML="<li>Loading attractions...</li>";const o={method:"GET",headers:{accept:"application/json",Authorization:w}},e=`https://api.foursquare.com/v3/places/search?near=${encodeURIComponent(t)}&limit=10&fields=name,location,categories,fsq_id,geocodes`;try{const n=await fetch(e,o);if(!n.ok)throw new Error(`Foursquare API error: ${n.status} ${n.statusText}`);const r=await n.json();console.log("Foursquare Data:",r);const a=r.results||[],i=await Promise.all(a.map(async s=>{const p=await b(s.fsq_id);return{...s,photoUrl:p}}));U(i),F(i)}catch(n){console.error("Error fetching attractions:",n),l.innerHTML="<li>Could not load attractions. Please try again later.</li>",c.textContent="Could not load map data."}}function U(t){if(l.innerHTML="",!t||t.length===0){l.innerHTML="<li>No attractions found for this location.</li>";return}t.forEach(o=>{var p;const e=document.createElement("li");e.className="card";const n=o.name||"Unnamed Attraction",r=((p=o.location)==null?void 0:p.formatted_address)||"Address not available",a=o.photoUrl,i=a?`<img src="${a}" alt="${n}" loading="lazy">`:'<div class="no-image-placeholder" style="height: 150px; background: #ddd; text-align: center; line-height: 150px; color: #888; border-radius: 4px; margin-bottom: 0.5rem;">No Image</div>',s={id:o.fsq_id,name:n,address:r};e.innerHTML=`
            ${i}
            <h4>${n}</h4>
            <p>${r}</p>
            <button class="fav-attraction-btn" data-attraction='${JSON.stringify(s)}'>
                Add Attraction to Favs
            </button>
            `,l.appendChild(e),v(e.querySelector(".fav-attraction-btn"),s.id)})}function v(t,o){t&&(A(o)?(t.textContent="Remove Attraction Fav",t.classList.add("is-favorite")):(t.textContent="Add Attraction Fav",t.classList.remove("is-favorite")))}async function b(t){if(!t)return null;const o={method:"GET",headers:{accept:"application/json",Authorization:w}},e=`https://api.foursquare.com/v3/places/${t}/photos?limit=1`;try{const n=await fetch(e,o);if(!n.ok)return console.warn(`Could not fetch photo for ${t}: ${n.status}`),null;const r=await n.json();if(r&&r.length>0){const a=r[0];return`${a.prefix}300x300${a.suffix}`}return null}catch(n){return console.error(`Error fetching photo for ${t}:`,n),null}}function F(t){if(c.innerHTML="",c.style.backgroundColor="transparent",d&&(d.remove(),d=null),typeof L>"u"){c.textContent="Map library (Leaflet) not loaded.",console.error("Leaflet library (L) is not defined.");return}let o=[51.505,-.09],e=13;const n=t.find(r=>{var a;return(a=r.geocodes)==null?void 0:a.main});if(n)o=[n.geocodes.main.latitude,n.geocodes.main.longitude];else if(t.length>0)console.warn("No main geocodes found for centering map. Using default.");else{c.textContent="No location data available to display map.";return}try{d=L.map(c).setView(o,e),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}).addTo(d),t.forEach(r=>{var a,i;if((a=r.geocodes)!=null&&a.main){const s=[r.geocodes.main.latitude,r.geocodes.main.longitude];L.marker(s).addTo(d).bindPopup(`<b>${r.name||"Attraction"}</b><br>${((i=r.location)==null?void 0:i.formatted_address)||""}`)}})}catch(r){console.error("Error initializing Leaflet map:",r),c.textContent="Error displaying map."}}async function y(t="USD"){m.textContent="Loading currency info...";const o=`https://v6.exchangerate-api.com/v6/${C}/latest/${t}`;try{const e=await fetch(o);if(!e.ok){const r=await e.json();throw new Error(`ExchangeRate API error: ${e.status} - ${r["error-type"]||e.statusText}`)}const n=await e.json();if(n.result==="success")N(n.conversion_rates,t);else throw new Error(`ExchangeRate API error: ${n["error-type"]}`)}catch(e){console.error("Error fetching currency data:",e),m.textContent="Could not load currency information."}}function N(t,o){const e=["EUR","GBP","JPY","CAD"];let n=`Rates based on 1 ${o}:<ul>`;e.forEach(r=>{t[r]&&(n+=`<li>1 ${o} = ${t[r].toFixed(4)} ${r}</li>`)}),n+="</ul>",m.innerHTML=n}document.addEventListener("DOMContentLoaded",x);const u="travelExplorerAttractionFavorites";function h(){const t=localStorage.getItem(u);return t?JSON.parse(t):[]}function A(t){return h().some(e=>e.id===t)}function R(t){const o=h();o.some(e=>e.id===t.id)||(o.push(t),localStorage.setItem(u,JSON.stringify(o)),console.log(`Added attraction ${t.name} to favorites.`))}function D(t){let o=h();o=o.filter(e=>e.id!==t),localStorage.setItem(u,JSON.stringify(o)),console.log(`Removed attraction ${t} from favorites.`)}l&&l.addEventListener("click",t=>{const o=t.target.closest(".fav-attraction-btn");if(o)try{const e=JSON.parse(o.dataset.attraction);A(e.id)?D(e.id):R(e),v(o,e.id)}catch(e){console.error("Error parsing attraction data from button:",e)}});
